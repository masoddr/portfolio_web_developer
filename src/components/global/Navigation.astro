---
import { Image } from "astro:assets";
import { Icon } from "astro-icon/components";
import { getLangFromUrl, getUrlWithoutLang, useTranslations, useTranslatedPath } from "@i18n/utils";

const isDev = import.meta.env.DEV;

const lang = getLangFromUrl(Astro.url);
const path = getUrlWithoutLang(Astro.url);
const t = useTranslations(lang);
const translatePath = useTranslatedPath(lang);

let pages = [
	{
		title: t("homepage"),
		url: "/",
	},
	// {
	// 	title: "Services",
	// 	url: "/services",
	// },
	{
		title: t("blog.title"),
		url: "/blog/",
	},
	{
		title: t("contacts"),
		url: "/contact/",
	},
];

// if (isDev) {
// 	pages.push({
// 		title: "Overview",
// 		url: "/system/overview",
// 	});
// }

const { pathname } = Astro.url;
---

<header>
	<a href={translatePath("/")} aria-label="Home" class="logo absolute z-50 flex h-[4.5rem] items-center md:h-[5.9rem]">
		<Image
			src="/logo.png"
			alt="Parallax Studio Logo"
			width={144}
			height={36}
			class="h-7 w-36 md:h-9"
		/>
	</a>
	<div data-xdata="{ open: false }" class="navigation fixed right-0 top-0 z-50" data-xbind.class="{'w-full navbar-open': open}">
		<div class="ml-auto md:max-w-fit" data-xbind.class="{'max-w-3xl': open, 'max-w-[8rem]': !open }">
			<div class="mx-auto w-full">
				<div
					class="shadow-thick resizable nav-container squircle relative mx-auto flex w-full flex-col justify-center overflow-x-hidden bg-zinc-900 backdrop-blur-xl backdrop-filter md:flex-row-reverse">
					<div class="flex flex-row items-center justify-end md:hidden">
						<a class="px-3 py-[0.4rem] pl-4" href={translatePath("/contact/")} aria-label="Contact Page">
							<Icon class="text-white" name="octicon:mail-16" width="20" data-xbind.class="{'hidden': open}" />
						</a>
						<button
							data-xon.click="open = !open"
							data-xbind.style="{'padding-top': open ? '1rem' : '0.4rem'}"
							aria-label="Open navbar"
							class="inline-flex items-center justify-center px-3 py-[0.4rem] pr-4 text-white hover:text-blue-300 focus:text-white focus:outline-none">
							<svg class="h-6 w-6" stroke="currentColor" fill="none" viewBox="0 0 24 24">
								<path
									data-xbind.class="{'hidden': open, 'inline-flex': !open }"
									class="inline-flex"
									stroke-linecap="round"
									stroke-linejoin="round"
									stroke-width="2"
									d="M4 6h16M4 12h16M4 18h16">
								</path>
								<path
									data-xbind.class="{'hidden': !open, 'inline-flex': open }"
									class="hidden"
									stroke-linecap="round"
									stroke-linejoin="round"
									stroke-width="2"
									d="M6 18L18 6M6 6l12 12">
								</path>
							</svg>
						</button>
					</div>
					<nav data-xbind.class="{'flex': open, 'hidden': !open}" class="hidden flex-grow flex-col justify-center py-12 md:flex md:py-0">
						<ul
							class="flex list-none flex-col items-end justify-center gap-2 px-2 text-center text-3xl md:flex-row md:items-center md:text-base">
							{
								pages.map((page) => (
									<li data-cursor-hover>
										<a
											href={translatePath(page.url)}
											class={`inline-block cursor-pointer px-1 py-[0.33rem] ${
												page.url === pathname ||
												page.url === pathname.replace(/^\/fr|\/$/, "") ||
												(page.url === "/blog" && (pathname.startsWith("/blog") || pathname.startsWith("/fr/blog")))
													? "active"
													: ""
											}`}>
											<span class="menu-item-container inline-block">
												<span class="menu-item px-4 py-1 font-semibold uppercase tracking-wide text-zinc-400 hover:text-white focus:text-white focus:shadow-none focus:outline-none">
													{page.title}
												</span>
											</span>
										</a>
									</li>
								))
							}
							<li>
								<a href={translatePath(path, `${lang === "fr" ? "en" : "fr"}`)} class="inline-block cursor-pointer px-1 py-[0.33rem]">
									<span class="menu-item-container inline-block">
										<span
											class="menu-item px-4 py-1 font-semibold uppercase tracking-wide text-zinc-400 hover:text-white focus:text-white focus:shadow-none focus:outline-none">
											{lang === "fr" ? "en" : "fr"}
										</span>
									</span>
								</a>
							</li>
						</ul>
					</nav>
				</div>
			</div>
		</div>
	</div>
</header>

<style>
	.navigation {
		mix-blend-mode: difference;
	}
	.navigation.navbar-open {
		mix-blend-mode: luminosity;
	}
	.navigation,
	.logo {
		padding: 1rem var(--base-padding-x);
	}
	@media (min-width: 768px) {
		.navigation,
		.logo {
			padding: 2rem var(--base-padding-x);
		}
	}
	.resizable:before {
		content: "|";
		position: absolute;
		left: 0.4rem;
		top: 0.36rem;
		font-size: 12px;
		line-height: 23px;
		color: #8e8e8e;
		opacity: 0;
		text-shadow: 4px 0 #8e8e8e;
		transition: all 0.5s ease;
	}
	.collapsed .resizable:before {
		opacity: 1;
	}
	nav a .menu-item-container {
		border-radius: 0.45rem;
	}
	nav a.active .menu-item-container,
	nav a:hover .menu-item-container {
		transition: background-color 0.3s ease;
	}
	nav ul:not(.collapsed) a.active .menu-item-container {
		transition-duration: 0.5s;
		background: #aaa;
	}
	nav ul:not(.collapsed) a:hover .menu-item-container {
		background: #fff;
	}
	nav ul:not(.collapsed) a.active .menu-item-container .menu-item,
	nav ul:not(.collapsed) a:hover .menu-item-container .menu-item {
		color: #000;
	}
	nav ul.collapsed a.active .menu-item-container .menu-item,
	nav ul.collapsed a:hover .menu-item-container .menu-item {
		color: #fff;
	}
</style>

<script>
	import { gsap } from "gsap";
	import { ScrollTrigger } from "gsap/ScrollTrigger";

	gsap.registerPlugin(ScrollTrigger);

	function init() {
		// Animation du logo
		gsap.from(".logo-svg", {
			duration: 1.5,
			opacity: 0,
			y: -20,
			ease: "power4.out"
		});

		// Animation des liens du menu
		const menuItems = document.querySelectorAll(".menu-item");
		gsap.from(menuItems, {
			duration: 0.8,
			opacity: 0,
			y: 20,
			stagger: 0.1,
			ease: "power4.out"
		});

		// Animation du bouton de menu mobile
		const menuButton = document.querySelector("button[aria-label='Open navbar']");
		gsap.from(menuButton, {
			duration: 1,
			opacity: 0,
			scale: 0.8,
			ease: "power4.out"
		});
	}

	document.removeEventListener("DOMContentLoaded", init);
	document.addEventListener("DOMContentLoaded", init);
</script>
